events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    upstream route0 {
        server route0:8080;
    }
    upstream route1 {
        server route1:8080;
    }
    server {
        listen       8080;
        server_name  localhost;

        location /route0{
            rewrite ^/route0(.*)$ $1 break;
            proxy_pass http://route0;
        }
        location /route1{
            proxy_connect_timeout 100ms; 
            proxy_read_timeout 100ms; 
            proxy_send_timeout 100ms;
            rewrite ^/route1(.*)$ $1 break;
            proxy_pass http://route1;
        }
        location / {
            content_by_lua '
                local route0, route1, action
                action = ngx.var.request_method

                if action == "POST" then
                    ngx.req.read_body()
                        local data = ngx.req.get_body_data()
                        arry = {method = ngx.HTTP_POST, body = data}
                else
                    arry = {method = ngx.HTTP_GET}
                end

                route0, route1 = ngx.location.capture_multi {
                    { "/route0" .. ngx.var.request_uri, arry},
                    { "/route1" .. ngx.var.request_uri, arry},
                }

                ngx.status = route0.status
                ngx.say(route0.body)
                    ';
        }
    }
}
